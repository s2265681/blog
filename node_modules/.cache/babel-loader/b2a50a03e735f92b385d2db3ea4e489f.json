{"remainingRequest":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/babel-loader/lib/index.js!/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/eslint-loader/index.js??ref--13-0!/Users/shangjiawei/Desktop/my all/node/blog_h5/src/config/fetch.js","dependencies":[{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/src/config/fetch.js","mtime":1558580572899},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { baseUrl } from \"./env\";\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee() {\n  var url,\n      data,\n      type,\n      method,\n      dataStr,\n      requestConfig,\n      response,\n      responseJson,\n      _args = arguments;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n          data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          type = _args.length > 2 && _args[2] !== undefined ? _args[2] : \"GET\";\n          method = _args.length > 3 && _args[3] !== undefined ? _args[3] : \"fetch\";\n          // debugger\n          type = type.toUpperCase();\n          url = baseUrl + url;\n\n          if (type == \"GET\") {\n            dataStr = \"\"; //数据拼接字符串\n\n            Object.keys(data).forEach(function (key) {\n              dataStr += key + \"=\" + data[key] + \"&\";\n            });\n\n            if (dataStr !== \"\") {\n              dataStr = dataStr.substr(0, dataStr.lastIndexOf(\"&\"));\n              url = url + \"?\" + dataStr;\n            }\n          }\n\n          if (!(window.fetch && method == \"fetch\")) {\n            _context.next = 25;\n            break;\n          }\n\n          requestConfig = {\n            credentials: \"include\",\n            method: type,\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            mode: \"cors\",\n            cache: \"force-cache\"\n          };\n\n          if (type == \"POST\") {\n            Object.defineProperty(requestConfig, \"body\", {\n              value: JSON.stringify(data)\n            });\n          }\n\n          _context.prev = 10;\n          _context.next = 13;\n          return fetch(url, requestConfig);\n\n        case 13:\n          response = _context.sent;\n          _context.next = 16;\n          return response.json();\n\n        case 16:\n          responseJson = _context.sent;\n          return _context.abrupt(\"return\", responseJson);\n\n        case 20:\n          _context.prev = 20;\n          _context.t0 = _context[\"catch\"](10);\n          throw new Error(_context.t0);\n\n        case 23:\n          _context.next = 26;\n          break;\n\n        case 25:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var requestObj;\n\n            if (window.XMLHttpRequest) {\n              requestObj = new XMLHttpRequest();\n            } else {\n              requestObj = new ActiveXObject();\n            }\n\n            var sendData = \"\";\n\n            if (type == \"POST\") {\n              sendData = JSON.stringify(data);\n            }\n\n            requestObj.open(type, url, true);\n            requestObj.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n            requestObj.send(sendData);\n\n            requestObj.onreadystatechange = function () {\n              if (requestObj.readyState == 4) {\n                if (requestObj.status == 200) {\n                  var obj = requestObj.response;\n\n                  if (_typeof(obj) !== \"object\") {\n                    obj = JSON.parse(obj);\n                  }\n\n                  resolve(obj);\n                } else {\n                  reject(requestObj);\n                }\n              }\n            };\n          }));\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[10, 20]]);\n}));",{"version":3,"sources":["/Users/shangjiawei/Desktop/my all/node/blog_h5/src/config/fetch.js"],"names":["baseUrl","url","data","type","method","toUpperCase","dataStr","Object","keys","forEach","key","substr","lastIndexOf","window","fetch","requestConfig","credentials","headers","Accept","mode","cache","defineProperty","value","JSON","stringify","response","json","responseJson","Error","Promise","resolve","reject","requestObj","XMLHttpRequest","ActiveXObject","sendData","open","setRequestHeader","send","onreadystatechange","readyState","status","obj","parse"],"mappings":"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","sourcesContent":["import { baseUrl } from \"./env\";\n\nexport default async (url = \"\", data = {}, type = \"GET\", method = \"fetch\") => {\n  // debugger\n  type = type.toUpperCase();\n  url = baseUrl + url;\n  if (type == \"GET\") {\n    let dataStr = \"\"; //数据拼接字符串\n    Object.keys(data).forEach(key => {\n      dataStr += key + \"=\" + data[key] + \"&\";\n    });\n\n    if (dataStr !== \"\") {\n      dataStr = dataStr.substr(0, dataStr.lastIndexOf(\"&\"));\n      url = url + \"?\" + dataStr;\n    }\n  }\n\n  if (window.fetch && method == \"fetch\") {\n    let requestConfig = {\n      credentials: \"include\",\n      method: type,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      mode: \"cors\",\n      cache: \"force-cache\"\n    };\n\n    if (type == \"POST\") {\n      Object.defineProperty(requestConfig, \"body\", {\n        value: JSON.stringify(data)\n      });\n    }\n\n    try {\n      const response = await fetch(url, requestConfig);\n      const responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      throw new Error(error);\n    }\n  } else {\n    return new Promise((resolve, reject) => {\n      let requestObj;\n      if (window.XMLHttpRequest) {\n        requestObj = new XMLHttpRequest();\n      } else {\n        requestObj = new ActiveXObject();\n      }\n\n      let sendData = \"\";\n      if (type == \"POST\") {\n        sendData = JSON.stringify(data);\n      }\n\n      requestObj.open(type, url, true);\n      requestObj.setRequestHeader(\n        \"Content-type\",\n        \"application/x-www-form-urlencoded\"\n      );\n      requestObj.send(sendData);\n\n      requestObj.onreadystatechange = () => {\n        if (requestObj.readyState == 4) {\n          if (requestObj.status == 200) {\n            let obj = requestObj.response;\n            if (typeof obj !== \"object\") {\n              obj = JSON.parse(obj);\n            }\n            resolve(obj);\n          } else {\n            reject(requestObj);\n          }\n        }\n      };\n    });\n  }\n};\n"]}]}