{"remainingRequest":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/thread-loader/dist/cjs.js!/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/babel-loader/lib/index.js!/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shangjiawei/Desktop/my all/node/blog_h5/src/pages/register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/src/pages/register.vue","mtime":1558925273319},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/cache-loader/dist/cjs.js","mtime":1557892098038},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/thread-loader/dist/cjs.js","mtime":1557892098371},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/babel-loader/lib/index.js","mtime":1557892095867},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/cache-loader/dist/cjs.js","mtime":1557892098038},{"path":"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/vue-loader/lib/index.js","mtime":1557892098561}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/shangjiawei/Desktop/my all/node/blog_h5/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { accountRegister } from \"./../service/getData\";\nexport default {\n  name: \"login\",\n  data: function data() {\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        realname: \"\"\n      },\n      showAlert: false,\n      userInfo: \"\"\n    };\n  },\n  methods: {\n    //发送登录信息\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.loginForm.username) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                if (this.loginForm.password) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                if (this.loginForm.realname) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 10:\n                _context.next = 12;\n                return accountRegister(this.loginForm.username, this.loginForm.password, this.loginForm.realname);\n\n              case 12:\n                this.userInfo = _context.sent;\n\n                if (this.userInfo.errno === -1) {\n                  this.$message({\n                    message: this.userInfo.message,\n                    type: \"error\"\n                  });\n                } else {\n                  this.$message({\n                    message: this.userInfo.message,\n                    type: \"success\"\n                  });\n                  this.$router.push(\"/login\");\n                } // await getBlogList()\n                // await accountRegister(this.loginForm.username, this.loginForm.password);\n\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,SAAA,eAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OADA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,UAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,KAAA,SAAA,CAAA,QAHA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAKA,KAAA,SAAA,CAAA,QALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAOA,KAAA,SAAA,CAAA,QAPA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAWA,eAAA,CACA,KAAA,SAAA,CAAA,QADA,EAEA,KAAA,SAAA,CAAA,QAFA,EAGA,KAAA,SAAA,CAAA,QAHA,CAXA;;AAAA;AAWA,qBAAA,QAXA;;AAiBA,oBAAA,KAAA,QAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA;AACA,uBAAA,QAAA,CAAA;AACA,oBAAA,OAAA,EAAA,KAAA,QAAA,CAAA,OADA;AAEA,oBAAA,IAAA,EAAA;AAFA,mBAAA;AAIA,iBALA,MAKA;AACA,uBAAA,QAAA,CAAA;AACA,oBAAA,OAAA,EAAA,KAAA,QAAA,CAAA,OADA;AAEA,oBAAA,IAAA,EAAA;AAFA,mBAAA;AAIA,uBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,iBA5BA,CA8BA;AACA;;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA,IAAA,SAjCA,qBAiCA,QAjCA,EAiCA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,WAAA;AACA;AAnCA;AAbA,CAAA","sourcesContent":["\n<template>\n  <div class=\"login\">\n    <img src=\"./../assets/img/sea.jpg\" class=\"header\" alt>\n    <div class=\"title\">注册</div>\n    <div class=\"loginForm\">\n      <el-form :model=\"loginForm\" ref=\"loginForm\" label-width=\"100px\">\n        <el-form-item\n          label=\"用户名\"\n          prop=\"username\"\n          style=\"color:#000\"\n          :rules=\"[\n                { required: true, message: '用户名不能为空'}\n              ]\"\n          size=\"mini\"\n        >\n          <el-col :span=\"20\">\n            <el-input type=\"username\" v-model.number=\"loginForm.username\" auto-complete=\"off\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item\n          label=\"密码\"\n          prop=\"password\"\n          style=\"color:#000\"\n          :rules=\"[\n                { required: true, message: '密码不能为空'}\n              ]\"\n          size=\"mini\"\n        >\n          <el-col :span=\"20\">\n            <el-input type=\"password\" v-model.number=\"loginForm.password\" auto-complete=\"off\"></el-input>\n          </el-col>\n        </el-form-item>\n         <el-form-item\n          label=\"真实姓名\"\n          prop=\"realname\"\n          style=\"color:#000\"\n          :rules=\"[\n                { required: true, message: '真实姓名不能为空'}\n              ]\"\n          size=\"mini\"\n        >\n          <el-col :span=\"20\">\n            <el-input type=\"realname\" v-model.number=\"loginForm.realname\" auto-complete=\"off\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm('loginForm')\" size=\"mini\">提交</el-button>\n          <el-button @click=\"resetForm('loginForm')\" size=\"mini\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <!-- <alert-tip v-if=\"true\" :showHide=\"showAlert\" :alertText=\"1111\"></alert-tip> -->\n  </div>\n</template>\n<script>\nimport { accountRegister } from \"./../service/getData\";\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        realname:\"\"\n      },\n      showAlert: false,\n      userInfo: \"\"\n    };\n  },\n  methods: {\n    //发送登录信息\n    async submitForm() {\n      if (!this.loginForm.username) {\n        return;\n      } else if (!this.loginForm.password) {\n        return;\n      }else if (!this.loginForm.realname) {\n        return;\n      }\n      //用户名注册\n      this.userInfo = await accountRegister(\n        this.loginForm.username,\n        this.loginForm.password,\n        this.loginForm.realname,\n      );\n\n      if (this.userInfo.errno === -1) {\n        this.$message({\n          message: this.userInfo.message,\n          type: \"error\"\n        });\n      } else {\n        this.$message({\n          message: this.userInfo.message,\n          type: \"success\"\n        });\n        this.$router.push(\"/login\");\n      }\n\n      // await getBlogList()\n      // await accountRegister(this.loginForm.username, this.loginForm.password);\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n  }\n};\n</script>\n<style scoped>\n.title {\n  position: fixed;\n  width: 100%;\n  text-align: center;\n  font-size: 0.45rem;\n  color: #352829;\n  top: 0.25rem;\n}\n\n.header {\n  background-color: #55547be0;\n  width: \"100%\";\n}\n.login {\n  background-color: hsla(242, 19%, 41%, 0.878);\n  height: 100vh;\n}\n.loginForm .el-form-item__label {\n  color: #333;\n}\n</style>"],"sourceRoot":"src/pages"}]}